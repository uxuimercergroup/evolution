{% block title %}{{ model.title }} : {{ global.site_title }}{% endblock %}
{% block content %}

<!-- INTRO SECTION - BEGINS -->
	<section class="col-24">
		<h1>{{ model.title }}</h1>
		<p class="mul-intro-text">
			The Tab Set control is a supplementary navigational system that controls the display of large groups of related content. It essentially organizes content into logical/easy to digest chunks that are displayed one at a time. Tab Sets help organize content on the page and keep sites looking neat and clean, so users won't be overwhelmed by tons of content.
		</p>
	</section>
<!-- INTRO SECTION - ENDS -->

<section class="col-24">

	<h3 class="mul-hdr-dbl-rule">
		Example
		<a href="javascript:;" class="mul-icon-size-small mul-icon-mul-arrow-circle-down mul-icon-color-gray-darker mul-icon-position-right mul-float-right related-items-menu"></a>
	</h3>

<!-- TABS - BEGINS -->
	<div class="col-24 example-min-height">

	<!-- TABS EXAMPLE - BEGINS -->
		{% include '/objects/tabs' %}
	<!-- TABS EXAMPLE - ENDS -->

	</div>
<!-- TABS - ENDS -->
	
<!-- DETAILS SECTION - BEGINS -->
	<a name="moreDetails"></a>
	<h4 class="mul-hdr-dbl-rule additional-detail-hdr">Additional Details</h4>

	<div class="col-24">
		<div class="js-mul-tabs-example mul-tabs">
			{% include "page-tabs" %}
			<div id="tabs-1">
				<p>This Tab Set control should be used when you want to manage the display of distinct, yet related groups of content that are connected to a single concept.
				</p>
				
				<p>It's a great feature when there is a lot of content that needs to be displayed as it only presents a subset of the content and keeps the rest hidden until another tab is selected. </p>
			</div>
			<div id="tabs-2">
				<p>All tabs should be left justified. This makes all Mercer tabs uniform and easy for users to spot on the page.</p>
				<p>Use Title Case for the tab labels.</p>
				<p>The tab content area is a variable height, so the height of that container may increase or decrease from one tab to another depending on the amount of content included. </p>
				<p>Avoid using multiple nested Tab Sets. When you have multiple layers of content or data, use a different UI control for the interior of a tab, such as a <a href="/objects/mini-filter">Mini Filter</a>.</p>
				
				<h5>States</h5>
				<p>There are two states to the tab set control:</p>
				<ul>
					<li>Active - This is the selected tab. There is only one Active tab at a time in the control.</li>
					<li>Inactive - These are the other available tabs. There may be more than one Inactive tab at a time in the control.</li>
				</ul>
				
				<h5>Visual Design</h5>
				<p>The background for the Active tab is #FFFFFF.</p>
				<p>The background for the Inactive tab is a gradient. The top color is #dfdfdf, and the bottom color is #f2f2f2.	
			</div>
			<div id="tabs-3">
				<h5>Cross Browser Compatibility</h5>
				<p>IE9 doesn't crop background gradients on rounded corners, so we square the corners of the tabs and it looks just like IE8.</p>
				
				<h5>Dependencies</h5>
				<p>Tab Sets are a jQuery UI control. For more information on jQuery UI Tabs and the configurable options available, check out the <a href="http://api.jqueryui.com/tabs/" target="_blank">jQuery UI Tabs API</a>. This site is maintained by The jQuery Foundation, not Mercer.</p>

				<h4 class="mul-hdr-rule">Dependencies</h4>
				<table class="mul-table mul-table-borders" id="" border="0" cellpadding="0" cellspacing="0" title="" summary="">
					<thead>
						<tr>
							<th width="" scope="col">Library</th>
							<th width="" scope="col">Location or Download</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>jQuery {{ global.jquery_version }}</td>
							<td>assets/scripts/core/lib/jquery</td>
						</tr>
						<tr>
							<td>jQuery UI {{ global.jquery_ui_version }}</td>
							<td>assets/scripts/core/lib/jquery</td>
						</tr>
					</tbody>
				</table>
			</div>
			<div id="tabs-4">
				<p>In the mobile version, the tab set becomes an active component, the number of tabs shrink to fit the screen.  The user is provided with 'forward' and 'back' controls to scroll thru the total number of available tabs.</p>
				<p>The text for the tab name and content increases slightly to allow for better readability.</p>
			</div>
			<div id="tabs-5">
			<!-- GET CODE - BEGINS -->
				<section class="col-24">

					<h5 class="mul-hdr-rule">HTML</h5>
					<p>Tabs work on a small screen size because there is a carousel like functionality added to the tab grouping.</p>

					<pre class="prettyprint linenums"><xmp>{% include '/objects/tabs' %}</xmp></pre>

					<h5 class="mul-hdr-rule">JS</h5>
					<p>To init the tabs for your page you would replace <code>js-mul-tabs-example</code> with the name of your tabs. You would also need to add the new class name to the HTML as well.</p>

					<pre class="prettyprint linenums">mulTabs('js-mul-tabs-example');</pre>

				</section>
			<!-- GET CODE - ENDS -->
			</div>
		</div>
	</div>
<!-- DETAILS SECTION - ENDS -->

</section>
{% endblock %}