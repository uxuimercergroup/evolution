{% block title %}{{ model.title }} : {{ global.site_title }}{% endblock %}
{% block content %}

<!-- INTRO SECTION - BEGINS -->
	<section class="col-24">
		<h1>{{ model.title }}</h1>
		<p class="mul-intro-text">
			The Modal Window provides information to the user that supplements or impacts the current site or application page. Examples of Modal Windows include a small window popping up to allow for editing data on a form, a separate window providing more details for the current entity, or using a mini "wizard" flow to present separate information.
		</p>
	</section>
<!-- INTRO SECTION - ENDS -->

<section class="col-24">

	<h3 class="mul-hdr-dbl-rule">
		Example
		<a href="javascript:;" class="mul-icon-size-small mul-icon-mul-arrow-circle-down mul-icon-color-gray-darker mul-icon-position-right mul-float-right related-items-menu"></a>
	</h3>

<!-- MODALS - BEGINS -->
	<div class="col-24 example-min-height">

		<div class="col-6 first">

			<div class="mul-box mul-box-rnd mul-padding-bottom mul-ref-example-box">
				<h4 class="mul-hdr-rule">Short content</h4>
				<p><small>Default settings</small></p>

				<!-- MODALS - DEFAULT - EXAMPLE - BEGINS -->
				{% include '/objects/modal-default' %}
				<!-- MODALS - DEFAULT - EXAMPLE - ENDS -->

			</div>

		</div>
		<div class="col-6">

			<div class="mul-box mul-box-rnd mul-padding-bottom mul-ref-example-box">
				<h4 class="mul-hdr-rule">Long content</h4>
				<p><small>Auto scrolling</small></p>

				<!-- MODALS - AUTO SCROLLING - EXAMPLE - BEGINS -->
				{% include '/objects/modal-auto-scrolling' %}
				<!-- MODALS - AUTO SCROLLING - EXAMPLE - ENDS -->

			</div>

		</div>
		<div class="col-6">

			<div class="mul-box mul-box-rnd mul-padding-bottom mul-ref-example-box">
				<h4 class="mul-hdr-rule">Long content</h4>
				<p><small>Fixed buttons (auto scrolling)</small></p>

				<!-- MODALS - AUTO SCROLLING WITH FIXED BUTTONS - EXAMPLE - BEGINS -->				
				{% include '/objects/modal-auto-scrolling-fixed-btns' %}
				<!-- MODALS - AUTO SCROLLING WITH FIXED BUTTONS - EXAMPLE - ENDS -->

			</div>

		</div>
		<div class="col-6">

			<div class="mul-box mul-box-rnd mul-padding-bottom mul-ref-example-box">
				<h4 class="mul-hdr-rule">Additional Feature</h4>
				<p><small>Click Outside Modal to Close</small></p>

				<!-- MODALS - CLICK OUTSIDE TO CLOSE - EXAMPLE - BEGINS -->
				{% include '/objects/modal-auto-scrolling-clickout' %}
				<!-- MODALS - CLICK OUTSIDE TO CLOSE - EXAMPLE - ENDS -->

			</div>

		</div>

	</div>
<!-- MODALS - ENDS -->

<!-- DETAILS SECTION - BEGINS -->
	<a name="moreDetails"></a>
	<h4 class="mul-hdr-dbl-rule additional-detail-hdr">Additional Details</h4>

	<div class="col-24">
		<div class="js-mul-tabs-example mul-tabs">
			{% include "page-tabs" %}
			<div id="tabs-1">
				<p>
					A Modal Window is different from a Pop-Up Window because it actually disables the page behind it and only allows the user access to the content in the Modal Window until the required action is complete or the user chooses to close out of the Modal Window. 
				</p>

				<p>When the page is long enough to scroll, the page should scroll, while the modal remains in a fixed position.</p>

				At Mercer, we use three different Modal Windows:
				<ul>
					<li>
						Default with short content
						<ul>
							<li>The height of this Modal Window is content aware and will adapt based on the amount of dialogue content.</li> 
							<li>When you hit that max content height of 530, the Scrolling Mechanism feature is activated.</li>
							<li>The headline section is not considered part of the content dialogue. </li>
						</ul>
					</li>
					<li>
						Default with long content (Auto Scrolling)
						<ul>
							<li>Once the content in the Modal Window hits the content area max height, the Auto Scrolling feature is automatically activated.</li>
							<li>The user must scroll through the content to get to the Modal Window buttons.</li>
						</ul>
					</li>
					<li>
						Default with long content and fixed buttons (Auto Scrolling)
						<ul>
							<li>This version is similar to the above Modal Window, but it includes buttons that are fixed in a footer near the end of the Window, not directly after the content.</li> 
							<li>The user doesn’t have to scroll through all the content in order to access the buttons.</li>
						</ul>
					</li>
				</ul>

				<p>
					You can use the Modal Window when you need to provide information to the user that supplements or impacts the current page the user is viewing. For example, the user needs to edit a specific section on a form or complete a separate task. Modal Windows also work well if an animation or video needs to be shown.
				</p>
				<p>
					<strong>Modal Window with Fixed Buttons</strong><br>
					A Modal Window with fixed buttons is great when you have a lot of content that needs to be displayed, but you want the user to be able to access the buttons without having to scroll through the entire block of content first. This type of Modal Window works well if the user has to accept terms or conditions before moving on with filing out a form or completing a required action.  
				</p>
			</div>
			<div id="tabs-2">
				<ul>
					<li>When the Modal Window is activated, the rest of the screen (the content/page behind it) is disabled.</li>
					<li>By default, the user can drag the Modal Window to any location on the page. This feature can be turned on or off by the designer if desired.</li> 
					<li>
						The Modal Window height is variable as it is dependent on content, but it does have a max height of 600 pixels.
						<ul>
							<li>Modal Windows with fixed buttons have a max height of 648 pixels.</li>
						</ul>
					</li>
					<li>
						The Auto Scrolling feature has fixed components:
						<ul>
							<li>This feature is enabled when the content area of the Modal Window reaches the max height of 300 pixels.</li>
							<li>The Scrollbar will be visible to user while content loads.</li>
						</ul> 
					</li>
					<li>
						The Modal Window width is variable, but it does have default of 500 pixels.
						<ul>
							<li>The designer can override default width value in the JS code to adapt to page design, page space, or Modal Window purpose.</li>
						</ul>
					</li>
					<li>
						Modal Windows will contain buttons since the user will have to take an action.
						<ul>
							<li>Follow Mercer Button protocol for colors and functions.</li>
							<li>Buttons can be fixed in the Modal Window or included as part of the content as described above.</li>
							<li>Save or Cancel Buttons will have the functionality to close the Modal Window once the user completes the required task.</li>
							<li>Fixed buttons are jQuery UI controls.</li>
						</ul>
					</li>
					<li>
						Modal Windows will contain the “close” icon (white circle with a blue X inside) so the user can close the window once the required task is completed.
					</li>
				</ul>
			</div>
			<div id="tabs-3">
				<h5>Cross browser compatibility</h5>
				<p>IE9 doesn't crop background gradients on containers with rounded corners, so we square the corners of every container so it looks just like IE8.</p>

				<h4 class="mul-hdr-rule">Dependencies</h4>
				<table class="mul-table mul-table-borders" id="" border="0" cellpadding="0" cellspacing="0" title="" summary="">
					<thead>
						<tr>
							<th width="" scope="col">Library</th>
							<th width="" scope="col">Location or Download</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>jQuery {{ global.jquery_version }}</td>
							<td>assets/scripts/core/lib/jquery</td>
						</tr>
						<tr>
							<td>jQuery UI {{ global.jquery_ui_version }}</td>
							<td>assets/scripts/core/lib/jquery</td>
						</tr>
						<tr>
							<td>jQuery Mouse Wheel Intent 1.2</td>
							<td>assets/scripts/core/lib/jquery/plugins</td>
						</tr>
						<tr>
							<td>jQuery UI Dialog - Click Outside Plugin</td>
							<td>assets/scripts/core/lib/jquery/plugins</td>
						</tr>
					</tbody>
				</table>
			</div>
			<div id="tabs-4">
				<p>Examples go here&hellip;</p>
			</div>
			<div id="tabs-5">
			<!-- GET CODE - BEGINS -->
				<section class="col-24">

					<h5 class="mul-hdr-rule">HTML</h5>
					

					<h5>Default settings</h5>
					<pre class="prettyprint linenums"><xmp>{% include '/objects/modal-default' %}</xmp></pre>
					
					<h5>Auto scrolling</h5>
					<pre class="prettyprint linenums"><xmp>{% include '/objects/modal-auto-scrolling' %}</xmp></pre>
					
					<h5>Fixed buttons (auto scrolling)</h5>
					<pre class="prettyprint linenums"><xmp>{% include '/objects/modal-auto-scrolling-fixed-btns' %}</xmp></pre>
					
					<h5>Click Outside Modal to Close</h5>
					<pre class="prettyprint linenums"><xmp>{% include '/objects/modal-auto-scrolling-clickout' %}</xmp></pre>

					<h5 class="mul-hdr-rule">JS</h5>

					<h5>Default settings</h5>
					<pre class="prettyprint linenums">
// Modal dialog with short content example click event
var modalDialogShortExampleClickEvent = function(){
	jQuery('#js-mul-dialog-modal-example-btn').click(function() {
		jQuery('#js-mul-dialog-modal-example').dialog('open');
	});
}

// Modal dialog with short content example
mulDialogModal('js-mul-dialog-modal-example');

// Modal dialog with short content example click event init
modalDialogShortExampleClickEvent();
</pre>
					
					<h5>Auto scrolling</h5>
					<pre class="prettyprint linenums">
// Modal dialog with long content example click event
var modalDialogLongExampleClickEvent = function(){
	jQuery('#js-mul-dialog-modal-long-example-btn').click(function() {
		jQuery('#js-mul-dialog-modal-long-example').dialog('open');
	});
}

// Modal dialog with long content example
mulDialogModal('js-mul-dialog-modal-long-example');

// Modal dialog with long content example click event init
modalDialogLongExampleClickEvent();
</pre>
					
					<h5>Fixed buttons (auto scrolling)</h5>
					<pre class="prettyprint linenums">
// Modal dialog with long content and fixed buttons (jQuery UI generated) example click event
var modalDialogLongFixedExampleClickEvent = function(){
	jQuery('#js-mul-dialog-modal-long-fixed-buttons-example-btn').click(function() {
		jQuery('#js-mul-dialog-modal-long-fixed-buttons-example').dialog('open');
	});
}

// Modal dialog with long content and fixed buttons (jQuery UI generated) example
mulDialogModal('js-mul-dialog-modal-long-fixed-buttons-example',{
	buttons: { // Define buttons at bottom of dialog, buttons stay fixed to bottom on dialog with scrolling content div
		'cancel' : { // Define name of button
			text: 'Cancel', // Text of the button
			priority: 'secondary', // Priority level of the button. Values available: primary, secondary
			click: function() { // Click event of the button, this click event adds a close function
				jQuery(this).dialog('close');
			}
		},
		'cancel_disabled' : {
			text: 'Disabled',
			priority: 'secondary',
			disabled: 'disabled' // Disabled button option
		},
		'html_example' : {
			html: '<strong>HTML</strong> example', // HTML inside button option, use in place of "text:"
			priority: 'secondary',
			click: function() {
				jQuery(this).dialog('close');
			}
		},
		'save' : {
			text: 'Save',
			priority: 'primary',
			"class": 'mul-btn-primary', // Add class to button option. Add class of "mul-btn-primary" for primary button styles
			click: function() {
				jQuery(this).dialog('close');
			}
		}
	}
});

// Modal dialog with long content and fixed buttons (jQuery UI generated) example click event init
modalDialogLongFixedExampleClickEvent();
</pre>
					
					<h5>Click Outside Modal to Close</h5>
					<pre class="prettyprint linenums">
// Modal dialog with click outside example click event
var modalDialogClickOutsideExampleClickEvent = function(){
	jQuery('#js-mul-dialog-modal-clickoutside-example-btn').click(function() {
		jQuery('#js-mul-dialog-modal-clickoutside-example').dialog('open');
	});
}

// Modal dialog click outside to close example
mulDialogModal('js-mul-dialog-modal-clickoutside-example',{

	// Click outside option: click outside modal to close it
	clickOutside: true, // clicking outside the dialog will close it
	clickOutsideTrigger: '#js-mul-dialog-modal-clickoutside-example-btn' // Element (id or class) that triggers the dialog opening 

});

// Modal dialog with click outside example click event init
modalDialogClickOutsideExampleClickEvent();
</pre>

				</section>
			<!-- GET CODE - ENDS -->
			</div>
		</div>
	</div>
<!-- DETAILS SECTION - ENDS -->

</section>
{% endblock %}