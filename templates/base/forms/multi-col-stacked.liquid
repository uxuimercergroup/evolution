{% block title %}{{ model.title }} : {{ global.site_title }}{% endblock %}
{% block content %}

<!-- INTRO SECTION - BEGINS -->
	<section class="col-24">
		<h1>{{ model.title }}</h1>
		<p class="mul-intro-text">
			The Multi-Column Stacked Form takes the
			<a href="/base/forms/stacked">Stacked Form</a>
			and allows it to be split into multiple columns using any of the underlying Mercer Grid systems.
		</p>
		<p>
			<small>**Not all form layouts will work well together</small>
		</p>
	</section>
<!-- INTRO SECTION - ENDS -->

<section class="col-24">

	<h3 class="mul-hdr-dbl-rule">
		Example
		<a href="javascript:;" class="mul-icon-size-small mul-icon-mul-arrow-circle-down mul-icon-color-gray-darker mul-icon-position-right mul-float-right related-items-menu"></a>
	</h3>

	<div class="col-24 example-min-height">

		{% include '/base/forms/form-multi-col-stacked' %}

	</div>

<!-- DETAILS SECTION - BEGINS -->
	<a name="moreDetails"></a>
	<h4 class="mul-hdr-dbl-rule additional-detail-hdr">Additional Details</h4>

	<div class="col-24">
		<div class="js-mul-tabs-example mul-tabs">
			{% include "page-tabs" %}
			<div id="tabs-1">
				<p>Multi-Column Stacked Forms work well when Form Elements have multiple parts, like a mailing address. It's also a good option if a Form has several Fields grouped together, like on an employment history section on an online job application. </p>
				<p>
					The Multi-Column Stacked Form allows for the high level of configurability support offered by the Stacked Form, while at the same time providing a higher degree of manipulation of screen real estate for grouping or aesthetic purposes. 
				</p>
			</div>
			<div id="tabs-2">
				<h5>Margins</h5>
				<p>In order to keep with Mercer consistency, the margins between Elements have been standardized:</p>
				<ul>
					<li>Use a 10 pixel bottom between the Element and next Field Label. </li>
					<li>Use a 3 pixel bottom margin between a Label and an Input.</li>
				</ul>
				
				<h5>Labels</h5>
				<p>All field labels should use Title Case. See the <a href="/copy-text-styleguide">Copy/Text Style Guide narrative</a> for more detail.</p>

				<h5>Active State</h5>
				<p>The active state for any field should be indicated by the application of the "Attention" color to the border of the specific field the user has clicked into.</p>
				
				<h5>Required Fields</h5>
				<p>All required fields should be denoted by placing the  Required icon (the "asterisk-required.png" image from the <a href="/base/icons">list of icons</a>) immediately to the left of the Field Label.</p>

				<h5>Error Handling</h5>
				<p>See the <a href="/base/forms/field-specific-error">Field Specific Error Message</a> page for details.</p>
			</div>
			<div id="tabs-3">
				<h5>Placeholder Text</h5>
				<p>Some Form Fields contain Placeholder Text. However, IE9 doesn't understand the polyfill needed to create this type of text. In this case, you will need Java Script to put the Placeholder Text where it needs to go.</p>
			</div>
			<div id="tabs-4">
				<p>Examples go here&hellip;</p>
			</div>
			<div id="tabs-5">
			<!-- GET CODE - BEGINS -->
				<section class="col-24">

					<h5 class="mul-hdr-rule">HTML</h5>
					

					<pre class="prettyprint linenums"><xmp>{% include '/base/forms/form-multi-col-stacked' %}</xmp></pre>

				</section>
			<!-- GET CODE - ENDS -->
			</div>
		</div>
	</div>
<!-- DETAILS SECTION - ENDS -->

</section>
{% endblock %}